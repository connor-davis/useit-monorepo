// This file is auto-generated by @hey-api/openapi-ts
import type {
  Client,
  Options as ClientOptions,
  TDataShape,
} from '@hey-api/client-fetch';

import { client as _heyApiClient } from './client.gen';
import type {
  DeleteApiBusinessesByIdData,
  DeleteApiBusinessesByIdError,
  DeleteApiBusinessesByIdResponse,
  DeleteApiCollectorsByIdData,
  DeleteApiCollectorsByIdError,
  DeleteApiCollectorsByIdResponse,
  DeleteApiMaterialsByIdData,
  DeleteApiMaterialsByIdError,
  DeleteApiMaterialsByIdResponse,
  DeleteApiProductsByIdData,
  DeleteApiProductsByIdError,
  DeleteApiProductsByIdResponse,
  GetApiBusinessesByIdData,
  GetApiBusinessesByIdError,
  GetApiBusinessesByIdResponse,
  GetApiBusinessesData,
  GetApiBusinessesResponse,
  GetApiCollectorsByIdData,
  GetApiCollectorsByIdError,
  GetApiCollectorsByIdResponse,
  GetApiCollectorsData,
  GetApiCollectorsResponse,
  GetApiData,
  GetApiMaterialsByIdData,
  GetApiMaterialsByIdError,
  GetApiMaterialsByIdResponse,
  GetApiMaterialsData,
  GetApiMaterialsResponse,
  GetApiProductsByIdData,
  GetApiProductsByIdError,
  GetApiProductsByIdResponse,
  GetApiProductsData,
  GetApiProductsResponse,
  GetApiProfileData,
  GetApiProfileError,
  GetApiProfileResponse,
  GetApiResponse,
  GetApiStockData,
  GetApiStockProductByProductIdData,
  GetApiStockProductByProductIdError,
  GetApiStockProductByProductIdResponse,
  GetApiStockResponse,
  GetApiTransactionsByIdData,
  GetApiTransactionsByIdError,
  GetApiTransactionsByIdResponse,
  GetApiTransactionsData,
  GetApiTransactionsResponse,
  PatchApiBusinessesByIdData,
  PatchApiBusinessesByIdError,
  PatchApiBusinessesByIdResponse,
  PatchApiCollectorsByIdData,
  PatchApiCollectorsByIdError,
  PatchApiCollectorsByIdResponse,
  PatchApiMaterialsByIdData,
  PatchApiMaterialsByIdError,
  PatchApiMaterialsByIdResponse,
  PatchApiOnboardingSetRoleByRoleData,
  PatchApiOnboardingSetRoleByRoleResponse,
  PatchApiProductsByIdData,
  PatchApiProductsByIdError,
  PatchApiProductsByIdResponse,
  PatchApiTransactionsAcceptByIdData,
  PatchApiTransactionsAcceptByIdError,
  PatchApiTransactionsAcceptByIdResponse,
  PatchApiTransactionsDeclineByIdData,
  PatchApiTransactionsDeclineByIdError,
  PatchApiTransactionsDeclineByIdResponse,
  PostApiBusinessesData,
  PostApiBusinessesError,
  PostApiBusinessesResponse,
  PostApiCollectorsData,
  PostApiCollectorsError,
  PostApiCollectorsResponse,
  PostApiMaterialsData,
  PostApiMaterialsResponse,
  PostApiProductsData,
  PostApiProductsError,
  PostApiProductsResponse,
  PostApiTransactionsData,
  PostApiTransactionsResponse,
} from './types.gen';

export type Options<
  TData extends TDataShape = TDataShape,
  ThrowOnError extends boolean = boolean,
> = ClientOptions<TData, ThrowOnError> & {
  /**
   * You can provide a client instance returned by `createClient()` instead of
   * individual options. This might be also useful if you want to implement a
   * custom client.
   */
  client?: Client;
  /**
   * You can pass arbitrary values through the `meta` object. This can be
   * used to access values that aren't defined as part of the SDK function.
   */
  meta?: Record<string, unknown>;
};

export const getApi = <ThrowOnError extends boolean = false>(
  options?: Options<GetApiData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetApiResponse,
    unknown,
    ThrowOnError
  >({
    url: '/api',
    ...options,
  });
};

export const getApiProfile = <ThrowOnError extends boolean = false>(
  options?: Options<GetApiProfileData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetApiProfileResponse,
    GetApiProfileError,
    ThrowOnError
  >({
    url: '/api/profile',
    ...options,
  });
};

export const getApiBusinesses = <ThrowOnError extends boolean = false>(
  options?: Options<GetApiBusinessesData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetApiBusinessesResponse,
    unknown,
    ThrowOnError
  >({
    url: '/api/businesses',
    ...options,
  });
};

export const postApiBusinesses = <ThrowOnError extends boolean = false>(
  options?: Options<PostApiBusinessesData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).post<
    PostApiBusinessesResponse,
    PostApiBusinessesError,
    ThrowOnError
  >({
    url: '/api/businesses',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

export const deleteApiBusinessesById = <ThrowOnError extends boolean = false>(
  options: Options<DeleteApiBusinessesByIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteApiBusinessesByIdResponse,
    DeleteApiBusinessesByIdError,
    ThrowOnError
  >({
    url: '/api/businesses/{id}',
    ...options,
  });
};

export const getApiBusinessesById = <ThrowOnError extends boolean = false>(
  options: Options<GetApiBusinessesByIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetApiBusinessesByIdResponse,
    GetApiBusinessesByIdError,
    ThrowOnError
  >({
    url: '/api/businesses/{id}',
    ...options,
  });
};

export const patchApiBusinessesById = <ThrowOnError extends boolean = false>(
  options: Options<PatchApiBusinessesByIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).patch<
    PatchApiBusinessesByIdResponse,
    PatchApiBusinessesByIdError,
    ThrowOnError
  >({
    url: '/api/businesses/{id}',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

export const getApiCollectors = <ThrowOnError extends boolean = false>(
  options?: Options<GetApiCollectorsData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetApiCollectorsResponse,
    unknown,
    ThrowOnError
  >({
    url: '/api/collectors',
    ...options,
  });
};

export const postApiCollectors = <ThrowOnError extends boolean = false>(
  options?: Options<PostApiCollectorsData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).post<
    PostApiCollectorsResponse,
    PostApiCollectorsError,
    ThrowOnError
  >({
    url: '/api/collectors',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

export const deleteApiCollectorsById = <ThrowOnError extends boolean = false>(
  options: Options<DeleteApiCollectorsByIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteApiCollectorsByIdResponse,
    DeleteApiCollectorsByIdError,
    ThrowOnError
  >({
    url: '/api/collectors/{id}',
    ...options,
  });
};

export const getApiCollectorsById = <ThrowOnError extends boolean = false>(
  options: Options<GetApiCollectorsByIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetApiCollectorsByIdResponse,
    GetApiCollectorsByIdError,
    ThrowOnError
  >({
    url: '/api/collectors/{id}',
    ...options,
  });
};

export const patchApiCollectorsById = <ThrowOnError extends boolean = false>(
  options: Options<PatchApiCollectorsByIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).patch<
    PatchApiCollectorsByIdResponse,
    PatchApiCollectorsByIdError,
    ThrowOnError
  >({
    url: '/api/collectors/{id}',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

export const getApiMaterials = <ThrowOnError extends boolean = false>(
  options?: Options<GetApiMaterialsData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetApiMaterialsResponse,
    unknown,
    ThrowOnError
  >({
    url: '/api/materials',
    ...options,
  });
};

export const postApiMaterials = <ThrowOnError extends boolean = false>(
  options?: Options<PostApiMaterialsData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).post<
    PostApiMaterialsResponse,
    unknown,
    ThrowOnError
  >({
    url: '/api/materials',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

export const deleteApiMaterialsById = <ThrowOnError extends boolean = false>(
  options: Options<DeleteApiMaterialsByIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteApiMaterialsByIdResponse,
    DeleteApiMaterialsByIdError,
    ThrowOnError
  >({
    url: '/api/materials/{id}',
    ...options,
  });
};

export const getApiMaterialsById = <ThrowOnError extends boolean = false>(
  options: Options<GetApiMaterialsByIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetApiMaterialsByIdResponse,
    GetApiMaterialsByIdError,
    ThrowOnError
  >({
    url: '/api/materials/{id}',
    ...options,
  });
};

export const patchApiMaterialsById = <ThrowOnError extends boolean = false>(
  options: Options<PatchApiMaterialsByIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).patch<
    PatchApiMaterialsByIdResponse,
    PatchApiMaterialsByIdError,
    ThrowOnError
  >({
    url: '/api/materials/{id}',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

export const getApiProducts = <ThrowOnError extends boolean = false>(
  options?: Options<GetApiProductsData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetApiProductsResponse,
    unknown,
    ThrowOnError
  >({
    url: '/api/products',
    ...options,
  });
};

export const postApiProducts = <ThrowOnError extends boolean = false>(
  options?: Options<PostApiProductsData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).post<
    PostApiProductsResponse,
    PostApiProductsError,
    ThrowOnError
  >({
    url: '/api/products',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

export const deleteApiProductsById = <ThrowOnError extends boolean = false>(
  options: Options<DeleteApiProductsByIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteApiProductsByIdResponse,
    DeleteApiProductsByIdError,
    ThrowOnError
  >({
    url: '/api/products/{id}',
    ...options,
  });
};

export const getApiProductsById = <ThrowOnError extends boolean = false>(
  options: Options<GetApiProductsByIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetApiProductsByIdResponse,
    GetApiProductsByIdError,
    ThrowOnError
  >({
    url: '/api/products/{id}',
    ...options,
  });
};

export const patchApiProductsById = <ThrowOnError extends boolean = false>(
  options: Options<PatchApiProductsByIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).patch<
    PatchApiProductsByIdResponse,
    PatchApiProductsByIdError,
    ThrowOnError
  >({
    url: '/api/products/{id}',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

export const getApiTransactions = <ThrowOnError extends boolean = false>(
  options?: Options<GetApiTransactionsData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetApiTransactionsResponse,
    unknown,
    ThrowOnError
  >({
    url: '/api/transactions',
    ...options,
  });
};

export const postApiTransactions = <ThrowOnError extends boolean = false>(
  options?: Options<PostApiTransactionsData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).post<
    PostApiTransactionsResponse,
    unknown,
    ThrowOnError
  >({
    url: '/api/transactions',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

export const getApiTransactionsById = <ThrowOnError extends boolean = false>(
  options: Options<GetApiTransactionsByIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetApiTransactionsByIdResponse,
    GetApiTransactionsByIdError,
    ThrowOnError
  >({
    url: '/api/transactions/{id}',
    ...options,
  });
};

export const patchApiTransactionsAcceptById = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PatchApiTransactionsAcceptByIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).patch<
    PatchApiTransactionsAcceptByIdResponse,
    PatchApiTransactionsAcceptByIdError,
    ThrowOnError
  >({
    url: '/api/transactions/accept/{id}',
    ...options,
  });
};

export const patchApiTransactionsDeclineById = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PatchApiTransactionsDeclineByIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).patch<
    PatchApiTransactionsDeclineByIdResponse,
    PatchApiTransactionsDeclineByIdError,
    ThrowOnError
  >({
    url: '/api/transactions/decline/{id}',
    ...options,
  });
};

export const getApiStock = <ThrowOnError extends boolean = false>(
  options?: Options<GetApiStockData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetApiStockResponse,
    unknown,
    ThrowOnError
  >({
    url: '/api/stock',
    ...options,
  });
};

export const getApiStockProductByProductId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetApiStockProductByProductIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetApiStockProductByProductIdResponse,
    GetApiStockProductByProductIdError,
    ThrowOnError
  >({
    url: '/api/stock/product/{productId}',
    ...options,
  });
};

export const patchApiOnboardingSetRoleByRole = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PatchApiOnboardingSetRoleByRoleData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).patch<
    PatchApiOnboardingSetRoleByRoleResponse,
    unknown,
    ThrowOnError
  >({
    url: '/api/onboarding/set-role/{role}',
    ...options,
  });
};
